do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==4) then v28=nil;function v28(...)return {...},v12("#",...);end v29=nil;function v29()local v31=914 -(199 + 715) ;local v32;local v33;local v34;local v35;local v36;local v37;while true do local v67=0;local v68;while true do if (v67==(0 -0)) then v68=0 -0 ;while true do if (v68~=(624 -(266 + 357))) then else if (v31~=1) then else local v105=0 + 0 ;local v106;while true do if ((0 + 0)~=v105) then else v106=0 -0 ;while true do if (v106~=0) then else v36=v24();v37={};v106=1 -0 ;end if (2==v106) then v31=7 -5 ;break;end if (v106~=(1 + 0)) then else local v118=0;while true do if (v118==(1 + 0)) then v106=4 -2 ;break;end if (v118~=(0 + 0)) then else for v122=1,v36 do local v123=0;local v124;local v125;local v126;local v127;while true do if (v123==(0 -0)) then v124=1447 -(643 + 804) ;v125=nil;v123=1 + 0 ;end if (v123==1) then v126=nil;v127=nil;v123=2;end if (v123==(800 -(313 + 485))) then while true do if (v124==(0 + 0)) then local v138=0;while true do if (v138~=1) then else v124=1;break;end if (v138==0) then v125=0;v126=nil;v138=1;end end end if ((1 + 0)==v124) then v127=nil;while true do if (0~=v125) then else local v240=0;local v241;while true do if ((1014 -(943 + 71))~=v240) then else v241=0;while true do if (v241==(750 -(539 + 210))) then v125=1;break;end if (v241~=(0 -0)) then else local v307=0 -0 ;local v308;while true do if (v307~=(0 -0)) then else v308=1131 -(906 + 225) ;while true do if (v308==1) then v241=1 -0 ;break;end if (v308==(0 -0)) then local v367=0 -0 ;while true do if (v367~=(0 -0)) then else v126=v22();v127=nil;v367=1 -0 ;end if (v367~=(4 -3)) then else v308=1 -0 ;break;end end end end break;end end end end break;end end end if (v125==1) then if (v126==1) then v127=v22()~=0 ;elseif (v126==2) then v127=v25();elseif (v126==(1 + 2)) then v127=v26();end v37[v122]=v127;break;end end break;end end break;end end end v35[3]=v22();v118=1 -0 ;end end end end break;end end end break;end if (v68~=0) then else if (v31==(0 + 0)) then local v107=401 -(259 + 142) ;while true do if (2~=v107) then else v31=342 -(277 + 64) ;break;end if (v107==0) then v32={};v33={};v107=1 + 0 ;end if (v107==(122 -(6 + 115))) then v34={};v35={v32,v33,nil,v34};v107=3 -1 ;end end end if ((1 + 1)==v31) then local v108=0 -0 ;while true do if (v108==(0 -0)) then for v109=1 -0 ,v24() do local v110=1220 -(1153 + 67) ;local v111;local v112;local v113;while true do if (v110==(0 -0)) then v111=0 + 0 ;v112=nil;v110=857 -(73 + 783) ;end if ((1453 -(1170 + 282))==v110) then v113=nil;while true do if (v111==(0 -0)) then local v128=0 -0 ;while true do if (v128~=0) then else v112=547 -(25 + 522) ;v113=nil;v128=2 -1 ;end if (v128==(744 -(550 + 193))) then v111=3 -2 ;break;end end end if (v111==(1 -0)) then while true do if (v112~=(0 + 0)) then else v113=v22();if (v21(v113,1 + 0 ,1 -0 )==(0 -0)) then local v130=0 + 0 ;local v131;local v132;local v133;local v134;local v135;while true do if (2==v130) then v135=nil;while true do if (v131==2) then while true do if (v132==(0 + 0)) then local v287=0 -0 ;while true do if ((2 -1)==v287) then v132=2 -1 ;break;end if (v287~=(0 -0)) then else v133=v21(v113,519 -(357 + 160) ,3 + 0 );v134=v21(v113,1034 -(642 + 388) ,6);v287=202 -(47 + 154) ;end end end if (v132~=(2 -1)) then else v135={v23(),v23(),nil,nil};if (v133==(0 + 0)) then local v326=0 -0 ;local v327;while true do if (v326~=0) then else v327=0 -0 ;while true do if (v327==(0 + 0)) then v135[3 + 0 ]=v23();v135[4]=v23();break;end end break;end end elseif (v133==(1985 -(770 + 1214))) then v135[3]=v24();elseif (v133==2) then v135[259 -(136 + 120) ]=v24() -((2 + 0)^(13 + 3)) ;elseif (v133==3) then local v380=0 -0 ;local v381;local v382;while true do if ((1 + 0)==v380) then while true do if (v381~=0) then else v382=0 -0 ;while true do if (v382~=0) then else v135[3]=v24() -((5 -3)^(15 + 1)) ;v135[1485 -(1381 + 100) ]=v23();break;end end break;end end break;end if (v380==0) then v381=0;v382=nil;v380=1 + 0 ;end end end v132=2 + 0 ;end if (v132~=(2 + 1)) then else if (v21(v134,3,5 -2 )==1) then v135[4 + 0 ]=v37[v135[2 + 2 ]];end v32[v109]=v135;break;end if (v132==(2 + 0)) then if (v21(v134,1235 -(360 + 874) ,1)==1) then v135[232 -(205 + 25) ]=v37[v135[2 + 0 ]];end if (v21(v134,4 -2 ,132 -(127 + 3) )==(1 -0)) then v135[1333 -(565 + 765) ]=v37[v135[4 -1 ]];end v132=2 + 1 ;end end break;end if ((941 -(575 + 366))==v131) then local v263=1594 -(255 + 1339) ;while true do if (v263==(1 + 0)) then v131=726 -(24 + 701) ;break;end if (v263==0) then v132=0;v133=nil;v263=1;end end end if ((1 + 0)==v131) then local v264=0 -0 ;while true do if (v264~=(364 -(282 + 81))) then else v131=2;break;end if ((360 -(91 + 269))==v264) then v134=nil;v135=nil;v264=4 -3 ;end end end end break;end if (v130==(342 -(114 + 228))) then v131=0 -0 ;v132=nil;v130=1 + 0 ;end if (1==v130) then v133=nil;v134=nil;v130=2;end end end break;end end break;end end break;end end end for v114=1 + 0 ,v24() do v33[v114-1 ]=v29();end v108=903 -(898 + 4) ;end if (v108==1) then for v116=1 + 0 ,v24() do v34[v116]=v24();end return v35;end end end v68=1 + 0 ;end end break;end end end end v18=5;end if (v18==2) then function v23()local v38,v39=v1(v16,v19,v19 + 2 + 0 );v19=v19 + 2 ;return (v39 * (220 + 36)) + v38 ;end v24=nil;function v24()local v40=0;local v41;local v42;local v43;local v44;while true do if (v40==(0 + 0)) then v41,v42,v43,v44=v1(v16,v19,v19 + 3 );v19=v19 + (656 -(39 + 613)) ;v40=1;end if (v40==(1 + 0)) then return (v44 * (11840255 + 4936961)) + (v43 * ((38428 -(97 + 255)) + 27460)) + (v42 * (20 + 236)) + v41 ;end end end v25=nil;v18=3;end if (v18==5) then v30=nil;function v30(v45,v46,v47)local v48=v45[1];local v49=v45[2];local v50=v45[3];return function(...)local v69=0;local v70;local v71;local v72;local v73;local v74;while true do if (v69==2) then v74=nil;function v74()local v84=v48;local v85=v49;local v86=v50;local v87=v28;local v88={};local v89={};local v90={};for v94=0 + 0 ,v73 do if (((1907 -(95 + 195))==(3202 -1585)) and (v94>=v86)) then v88[v94-v86 ]=v72[v94 + (2 -1) ];else v90[v94]=v72[v94 + ((6 -4) -1) ];end end local v91=(v73-v86) + (1 -(0 + 0)) ;local v92;local v93;while true do local v95=631 -(420 + 211) ;local v96;local v97;while true do if ((v95==(0 + 0)) or ((1203 + 187)>=(4990 -((1588 -(241 + 939)) + 2)))) then v96=0 + 0 ;v97=nil;v95=3 -2 ;end if ((v95==(1 + 0)) or (((4135 -2977) -(512 + 558))>=(18460 -13641))) then while true do if ((v96==(0 -0)) or ((5058 -2535)<(4470 -2977))) then v97=0 + 0 ;while true do if (((4111 -1388)<=(5212 -(1213 + 147))) and (v97==(0 + 0 + 0))) then local v119=0 + 0 ;local v120;while true do if (((426 + 3137)>(2933 + 212 + 160)) and (v119==(1247 -(493 + 754)))) then v120=0;while true do if ((v120==(1 + 0)) or ((1063 + 738)>=(5221 -2905))) then v97=295 -(131 + 8 + 155) ;break;end if (((2260 -(846 + (159 -38)))<=(5073 -1929)) and (v120==(773 -(680 + 93)))) then local v129=0 -0 ;while true do if (((0 + 0)==v129) or ((5473 -1452)==(11991 -9568))) then v92=v84[v70];v93=v92[461 -(137 + 323) ];v129=3 -2 ;end if ((2066<=(12 + 2596)) and (v129==(1297 -(1265 + (467 -(266 + 170)))))) then v120=1 + 0 ;break;end end end end break;end end end if ((v97==(1 + 0)) or ((2309 -(428 + 244))>=(1248 + 1762))) then if ((((5922 -(46 + 75)) -2466)>((7396 -5211) -(615 + 252))) and (v93<=(1281 -(792 + 465)))) then if ((3236<=(6355 -(432 + (2164 -(612 + 566))))) and (v93<=(31 -20))) then if (((839 -595)<(1041 -(34 + 614))) and (v93<=(11 -6))) then if (((5066 -(311 + 638))<=(10957 -6033)) and (v93<=(5 -3))) then if ((v93<=(0 -0)) or ((7025 -3720)>(5567 -(636 + 1060)))) then v90[v92[5 -3 ]]=v92[6 -3 ]~=(0 + 0 + 0) ;elseif (((8837 -5421)<(8870 -5086)) and (v93>(104 -(67 + 36)))) then local v164=1977 -(251 + 1726) ;local v165;local v166;while true do if (((1276 + 2045)>(3360 -(92 + 72))) and (v164==(367 -(153 + 213)))) then for v277=v165 + ((378 -(375 + 1)) -1) ,v92[1248 -(782 + (1103 -640)) ] do v7(v166,v90[v277]);end break;end if (((4779 -(700 + 205 + 341))>((1846 -(1359 + 409)) + 429)) and (((0 -0) -0)==v164)) then v165=v92[444 -(15 + 427) ];v166=v90[v165];v164=1 -0 ;end end elseif ((v90[v92[2]]~=v90[v92[9 -5 ]]) or ((3993 -2122)>(2982 + 356 + 1268))) then v70=v70 + (3 -(5 -3)) ;else v70=v92[236 -(231 + 2) ];end elseif ((v93<=3) or ((77 -56)>(2742 -((4160 -2695) + 389)))) then if ((v90[v92[1476 -((2794 -2019) + 699) ]]<v90[v92[1182 -(1023 + 155) ]]) or ((4636 -(145 + 1702))>3621)) then v70=v70 + (3 -2) ;else v70=v92[3];end elseif (((2350 -1195)>=(2122 -(699 + 760))) and (v93>(276 -((430 -(74 + 104)) + 20)))) then if (((3709 -(131 + 1581))==(796 + (3292 -2091))) and (v90[v92[2 + 0 ]]~=v92[5 -1 ])) then v70=v70 + (1 -0) ;else v70=v92[3 + 0 ];end else do return v90[v92[2 + 0 ]];end end elseif ((v93<=(1110 -(805 + 297))) or (((4251 -(51 + 8)) -(350 + 1459))<(1170 + 870))) then if ((v93<=(2 + 4)) or ((1335 + 1094)<=(429 -304))) then local v140=0 -0 ;local v141;local v142;while true do if (((438 + 1095)==(11 + 1522)) and (v140==(1506 -(1305 + 201)))) then v141=v92[1 + 2 ];v142=v90[v141];v140=1 + 0 ;end if ((v140==(1 + 0)) or ((56 + 3897)<=(3789 -(382 + 1357)))) then for v254=v141 + (3 -2) ,v92[847 -(628 + 215) ] do v142=v142   .. v90[v254] ;end v90[v92[6 -4 ]]=v142;break;end end elseif ((v93==(1323 -(1111 + 205))) or ((2273 -1311)>=(9585 -5547))) then local v168=1172 -(160 + (3352 -2340)) ;local v169;local v170;local v171;local v172;while true do if ((v168==(2 + 0)) or ((824 + 857)>(5625 -2401))) then while true do if (((266 + 2)<=(6690 -2194)) and (v169==(752 -(556 + 196)))) then local v289=0 + 0 ;while true do if ((v289==(1594 -(1515 + 79))) or ((207 + 1948)==(3811 -(290 + 1439)))) then v170=0 -0 ;v171=nil;v289=(1 + 0) -0 ;end if ((v289==(1 + 0)) or (482>(6793 -3837))) then v169=1 + 0 ;break;end end end if ((v169==1) or ((10519 -5612)<=((1971 -(1353 + 283)) + 931))) then v172=nil;while true do if (((1 + 0)==v170) or ((1495 + 334)>(6464 -(1382 + 438)))) then for v343=1108 -(789 + 318) , #v89 do local v344=1199 -(527 + 672) ;local v345;while true do if ((v344==(0 + (214 -(18 + 196)))) or ((9538 -5005)<(8807 -4326))) then v345=v89[v343];for v383=1696 -(1329 + 367) , #v345 do local v384=0 -0 ;local v385;local v386;local v387;local v388;while true do if (((3 -2)==v384) or ((223 + 929 + 1049)>4631)) then local v401=0 + 0 ;while true do if ((v401==((3536 -2534) -((1810 -(1080 + 63)) + 334))) or ((3774 -2659)==(2692 + 302 + 1905))) then v384=1 + 1 ;break;end if (((8625 -6654)<(3655 + 926)) and (v401==(0 -0))) then v387=nil;v388=nil;v401=1 + 0 ;end end end if (((675 + 960)>(1561 -(898 + 14))) and (v384==(577 -((1412 -1018) + 183)))) then local v402=0 + 0 ;while true do if (((3916 + 167)>(3705 -(170 + 807))) and (v402==((1847 -(535 + 1311)) + 0))) then v384=1 + 0 ;break;end if ((v402==(1628 -(827 + (1681 -(104 + 776))))) or ((13188 -9614)>(4086 -(14 + 3)))) then v385=128 -(85 + 43) ;v386=nil;v402=1448 -(935 + 56 + 456) ;end end end if (((9 -7)==v384) or ((1195 + 2994)<(1420 + 840 + 0))) then while true do if (((1412 + 1402)>=(3783 -1028)) and (v385==(1689 -(1408 + 171 + 109)))) then v388=v386[1 + 1 ];if (((v387==v90) and (v388>=v171)) or (((1551 -(40 + 203)) + 2059)<=(4280 -(1019 + 256)))) then local v409=0;local v410;local v411;while true do if (((1963 -(1718 + 244))==v409) or ((2496 -(375 + 805))==(2739 -(13 + 10)))) then while true do if (((5687 -2267)<=(8533 -4554)) and (v410==(1580 -(115 + 1465)))) then v411=0 + 0 ;while true do if (((6326 -3566)<=(10005 -6404)) and (v411==(1302 -(886 + 416)))) then v172[v388]=v387[v388];v386[1 -(0 + 0) ]=v172;break;end end break;end end break;end if (((943 + 1075)>=(2916 -(348 + 879))) and ((320 -(119 + 201))==v409)) then v410=0 + 0 ;v411=nil;v409=(381 + 805) -(506 + 679) ;end end end break;end if (((4130 -2357)<(7172 -4779)) and (v385==(0 -(0 + 0)))) then local v407=1746 -(1005 + 741) ;local v408;while true do if ((v407==(0 + 0)) or ((5951 -(138 + 906))<=(221 + 104 + 1232))) then v408=1282 -(335 + 947) ;while true do if (((3947 -(11 + 23))>(9774 -6339)) and (v408==(1306 -((4364 -3473) + 414)))) then v385=1 + 0 ;break;end if ((v408==(0 + (0 -0))) or ((832 -486)>=(1060 + 1978))) then local v414=(0 -0) + 0 + 0 ;while true do if ((v414==(1692 -(1151 + 541))) or ((6598 -2116)<(1832 -(263 + 557 + 403)))) then v386=v345[v383];v387=v386[1 + 0 ];v414=4 -3 ;end if ((2940==(3295 -(340 + 15))) and (v414==((266 + 1492) -(1513 + 244)))) then v408=1561 -((1760 -(148 + 1354)) + 1302) ;break;end end end end break;end end end end break;end end end break;end end end break;end if ((v170==((0 + 0) -0)) or ((7321 -4252)>=((2824 + 10251) -8098))) then local v336=1991 -(1492 + 499) ;local v337;while true do if ((v336==(0 + 0)) or ((1780 -305)>=(2306 + 2441))) then v337=0 + 0 ;while true do if ((((1036 -(229 + 807)) + 0)==v337) or ((7811 -4270)>(14386 -10761))) then local v389=0 -0 ;while true do if ((((4899 -1284) -(774 + 84))==(1973 + 87 + 697)) and ((1 + 0)==v389)) then v337=1 + 0 ;break;end if (((4318 -2231)<(2982 + 1832)) and (v389==(0 -(0 -0)))) then v171=v92[2 + (1235 -(524 + 711)) ];v172={};v389=(2026 -(571 + 35)) -(926 + 493) ;end end end if (((4756 -((2075 -(1264 + 424)) + 724))>(2933 -((711 -451) + 120))) and (v337==(1763 -(1015 + 747)))) then v170=1;break;end end break;end end end end break;end end break;end if (((4958 -(178 + 511))>=(57 + 537)) and (v168==((624 -(476 + 148)) -0))) then v169=1801 -(1444 + 357) ;v170=nil;v168=1 + 0 ;end if (((4721 -(242 + 321))<=(478 + 3946)) and (v168==((2 + 0) -1))) then v171=nil;v172=nil;v168=552 -(52 + (995 -497)) ;end end else local v173=v92[3 -1 ];local v174=v92[4 + 0 ];local v175=v173 + 2 + 0 ;local v176={v90[v173](v90[v173 + 1 + 0 ],v90[v175])};for v246=1,v174 do v90[v175 + v246 ]=v176[v246];end local v177=v176[1201 -(630 + 570) ];if ((((7127 -(585 + 578)) -2535)>(364 -175)) and v177) then local v255=0 -(213 -(121 + 92)) ;local v256;local v257;while true do if (((1122 + 209 + 3112)==(973 + 3470)) and (v255==1)) then while true do if (((5420 -(4669 -(334 + 829)))<=(10497 -7016)) and ((0 -0)==v256)) then v257=0 + 0 ;while true do if (((5755 -1444)>((10474 -7057) -(331 + 1325))) and (v257==(794 -(47 + 747)))) then v90[v175]=v177;v70=v92[5 -2 ];break;end end break;end end break;end if ((v255==(0 + 0)) or ((4390 + 191)==(280 + 154 + 736))) then v256=(0 + 0) -0 ;v257=nil;v255=1 + (1025 -(312 + 713)) ;end end else v70=v70 + (1290 -(701 + 588)) ;end end elseif ((v93<=9) or (((5855 -1541) -2763)>=(5337 -(657 + 118)))) then v90[v92[717 -(446 + 269) ]]=v90[v92[1730 -(643 + 1084) ]][v92[896 -(77 + (1523 -708)) ]];elseif ((v93>(187 -(101 + (1278 -(36 + 1166))))) or ((4664 -(1253 + (937 -(167 + 42))))>=(590 + (6193 -4044)))) then v90[v92[1 + 1 ]]();else v90[v92[(1 + 3) -2 ]]=v90[v92[3 + 0 + 0 ]][v90[v92[295 -(245 + (92 -46)) ]]];end elseif ((v93<=((11 + 34) -(264 -(44 + 192)))) or ((8865 -4984)==(2319 -(173 + 472)))) then if (((2357 -711)<=(16044 -12277)) and (v93<=(55 -41))) then if (((3927 -(6 + 798))>=(3106 -(1060 + 3))) and (v93<=(2 + 10))) then v90[v92[2 + (0 -0) ]]=v90[v92[4 -1 ]] * v90[v92[10 -(1 + 5) ]] ;elseif (((2344 -(671 + 54 + 116))>=(1338 + 73)) and (v93>(39 -26))) then v90[v92[1 + 1 ]]=v46[v92[3 -0 ]];else local v182=0 + 0 ;local v183;while true do if (((428 + 3405)>=(1353 -(514 + 357))) and ((0 + 0)==v182)) then v183=v92[1376 -(419 + (1465 -510)) ];v90[v183]=v90[v183]();break;end end end elseif ((v93<=(1619 -(810 + 794))) or ((144 + 1637)<=(2645 -901))) then if (((3116 -1955)<=((3731 + 124) -(303 + 639))) and  not v90[v92[5 -3 ]]) then v70=v70 + (2 -1) ;else v70=v92[2 + 1 ];end elseif ((v93>((5 + 30) -19)) or ((1332 + (4734 -(193 + 954)))<(3739 + 993))) then if ((3824<=(2349 + 1947)) and (v90[v92[3 -(1343 -(227 + 1115)) ]]==v92[4 + 0 ])) then v70=v70 + (1 -0) ;else v70=v92[3 + 0 ];end else for v249=v92[2 -0 ],v92[1629 -(152 + 1474) ] do v90[v249]=nil;end end elseif ((((20750 -(567 + 143)) -16008)<=((7003 + 3380) -5531)) and (v93<=(6 + 0 + 14))) then if (((5420 -3873)==(502 + 1045)) and (v93<=(593 -(485 + 90)))) then v90[v92[1881 -(927 + 952) ]]= #v90[v92[10 -7 ]];elseif (((594 + 1116)<(5496 -(785 + 2346))) and (v93>(1 + 9 + 9))) then v90[v92[5 -3 ]][v92[725 -(444 + 278) ]]=v92[4 + 0 ];else v46[v92[(24 -(14 + 7)) + 0 ]]=v90[v92[206 -(138 + 66) ]];end elseif (((2059 + 1607)<(4542 -(119 + 190))) and (v93<=(28 -6))) then if (((3562 -2507)<(3630 -(1345 + 593))) and (v93>(644 -(456 + (703 -(151 + 385)))))) then local v189=(1449 -(605 + 392)) -(22 + 430) ;local v190;local v191;local v192;local v193;local v194;while true do if (((3895 -(204 + 383))>=((3251 -(562 + 486)) -(141 + 82))) and (v189==(0 + 0))) then local v269=1727 -(1190 + 537) ;while true do if ((v269==((1 + 0) -0)) or ((4272 -(1549 + 685))>=((28392 -17208) -6271))) then v189=4 -3 ;break;end if ((v269==(0 -0)) or ((8419 -3968)<(7674 -5618))) then v190=1017 -(962 + 55) ;v191=nil;v269=2 -1 ;end end end if (((8960 -5134)>=((6041 -4550) -996)) and (v189==(3 -2))) then v192=nil;v193=nil;v189=2 + 0 ;end if ((v189==(1409 -(729 + 678))) or (((4125 -(1070 + 351)) -(1801 + 43))>1753)) then v194=nil;while true do if (((1597 -819)<=(4214 + 728)) and (v190==(1312 -(258 + 1054)))) then local v290=0;while true do if (((11606 -7993)>=((4975 -(373 + 476)) -2543)) and (v290==(0 + 0))) then v191=v92[2];v192,v193=v87(v90[v191](v13(v90,v191 + 1 ,v92[242 -(189 + 50) ])));v290=1 + 0 + (541 -(497 + 44)) ;end if (((2415 + 385)>(791 -((422 -201) + 561))) and (v290==(1 + 0))) then v190=819 -(177 + 641) ;break;end end end if ((v190==(115 -(100 + 13))) or ((9044 -6559)>((6356 -(1571 + 50)) + 100))) then for v309=v191,v71 do local v310=0 + 0 ;local v311;while true do if (((5318 -(527 + (2250 -(1017 + 294))))>=(2 + 2731)) and (v310==0)) then v311=0 -0 ;while true do if (((122 -43)>=(167 -94)) and (v311==(0 + (0 -0)))) then v194=v194 + (1 -(0 + 0)) ;v90[v309]=v192[v194];break;end end break;end end end break;end if ((v190==(141 -(67 + 73))) or ((2503 -(500 + 41))==(5808 -3931))) then local v291=(0 + 0) -(0 -0) ;while true do if (((0 + 0)==v291) or ((1629 + 1164)==((4178 -2820) + 2585))) then v71=(v193 + v191) -(2 -1) ;v194=0 + 0 + 0 ;v291=974 -(931 + 42) ;end if (((3578 -2288)<(4351 -(368 + 908))) and (v291==(3 -2))) then v190=1509 -(1379 + 32 + 96) ;break;end end end end break;end end else v90[v92[883 -(125 + 756) ]]=v90[v92[5 -2 ]] + v90[v92[4]] ;end elseif ((v93==(49 -(23 + 3))) or ((2274 -((257 -98) + (1161 -(781 + 285))))>=(2549 + 1764))) then v90[v92[7 -5 ]]=v90[v92[2 + 1 ]] -v90[v92[4]] ;else do return;end end elseif (((1561 + 2853)==(3025 + 1389)) and (v93<=((1507 -(948 + 86)) -(30 + 407)))) then if ((v93<=(83 -53)) or ((4465 -((410 -226) + 95))<((4383 -(34 + 1242)) + 522))) then if (((5742 -2592)<=(11447 -7608)) and (v93<=(1802 -(1503 + 272)))) then if (((7358 -4521)>=(2570 -(292 + 701 + 40))) and (v93<=(1173 -(370 + 778)))) then local v147=0 + 0 ;local v148;local v149;while true do if (((40 + 29 + 28)<=(4646 -(154 + 24))) and ((1 + 0)==v147)) then while true do if ((v148==(0 -0)) or ((2087 -(138 + 686))>(1581 + 501))) then v149=v92[1539 -(1178 + 359) ];v90[v149]=v90[v149](v90[v149 + (3 -2) ]);break;end end break;end if (((0 -0)==v147) or ((1000 + 1037)<(670 -439))) then v148=0 + 0 ;v149=nil;v147=1 + 0 ;end end elseif (((100 + 302)<(2310 + 2034)) and (v93==(11 + 15))) then v70=v92[1530 -((313 -(136 + 140)) + 1490) ];else v90[v92[2]]=v90[v92[10 -7 ]];end elseif ((v93<=(26 + 2)) or ((443 + 169)>(5840 -(721 + 243)))) then v90[v92[1830 -(1156 + 672) ]]=v30(v85[v92[394 -(303 + 88) ]],nil,v47);elseif (((220 + 776)>=(1889 -(24 + 1151))) and (v93>(5 + 0 + 24))) then if ((v92[1 + 0 + 1 ]==v90[v92[4 + 0 ]]) or ((4656 -(932 + 517))>(884 + 2480))) then v70=v70 + 1 ;else v70=v92[8 -5 ];end else local v200=1273 -(676 + (1110 -513)) ;local v201;local v202;local v203;local v204;local v205;while true do if (((162 + 1021)<(1417 + 86)) and (v200==(0 -0))) then v201=0 -(0 -0) ;v202=nil;v200=4 -3 ;end if ((3050>=(1518 -(178 + 1))) and (v200==(2 + 0))) then v205=nil;while true do if (((4301 + 20)>(5946 -(343 + 1469))) and (v201==(1 + 1))) then while true do if (((8782 -6832)>=(2094 -(529 + 394 + (2908 -(1583 + 305))))) and (v202==(0 + 0))) then local v339=0 + 0 ;local v340;while true do if (((4633 -(10 + 21))>=3534) and ((0 -0)==v339)) then v340=0 -0 ;while true do if (((6177 -3471)<((4488 + 6369) -7401)) and (v340==(1 + 0))) then v202=1 + 0 ;break;end if (((2548 + 1195)<(1323 + 2439)) and ((1285 -(238 + 1047))==v340)) then v203=v92[2 + 0 ];v204=v90[v203];v340=1;end end break;end end end if (((1606 -(1292 + 115))<=4565) and (v202==(572 -(327 + 244)))) then v205=v92[3 + 0 ];for v346=1 + 0 ,v205 do v204[v346]=v90[v203 + v346 ];end break;end end break;end if (((1269 -(192 + 1076))==v201) or ((2724 + 1915)<=(4039 -(133 + 502)))) then v204=nil;v205=nil;v201=913 -(382 + 529) ;end if ((v201==(0 + 0)) or ((799 + 2889)<=((590 -228) + 308))) then v202=592 -(257 + 335) ;v203=nil;v201=1 + 0 ;end end break;end if (((3834 + 237)<(13279 -(10062 -(521 + 987)))) and (v200==(1 + 0))) then v203=nil;v204=nil;v200=1734 -(1398 + 211 + 123) ;end end end elseif ((v93<=(5 + 28)) or ((1878 -(324 + 1431))>(4964 -(248 + 1167)))) then if ((v93<=((1160 -728) -(301 + 100))) or ((42 + 1011)<=(2906 -2023))) then v90[v92[381 -(278 + 101) ]]={};elseif ((v93>(9 + 8 + 15)) or ((5241 -(184 + 794))<(40 -10))) then local v206=0 -0 ;local v207;local v208;while true do if (((2463 -(43 + 46 + 1713))==(1601 -(617 + 323))) and (v206==(0 + 0))) then v207=18 -(15 + 3) ;v208=nil;v206=336 -(45 + 290) ;end if ((v206==((1448 -964) -(99 + 384))) or ((867 + 484)>=(3170 -(148 + 355)))) then while true do if ((v207==(479 -(338 + 141))) or ((917 -((50 -27) + 754))>(483 + 689))) then v208=v92[392 -(111 + 279) ];v90[v208](v13(v90,v208 + 1 + (87 -(78 + 9)) ,v92[2 + 1 ]));break;end end break;end end else v90[v92[853 -(155 + 696) ]]=v90[v92[869 -(318 + 548) ]]/v92[9 -5 ] ;end elseif (((5661 -(495 + 863))>=(2705 -1711)) and (v93<=(90 -56))) then local v152=57 -(17 + 40) ;local v153;local v154;local v155;local v156;while true do if ((2==v152) or ((4647 -(1044 + 485))>(5275 -(694 + 1204)))) then while true do if (((9069 -4856)<=(4819 -(185 + 124))) and (v153==(0 -0))) then local v280=0;while true do if (((5914 -(3695 -(502 + 1227)))>(208 + 18)) and (v280==1)) then v153=1854 -(1074 + 779) ;break;end if ((v280==(408 -(294 + 114))) or (((9023 -7126) + 246)==(3 -1))) then v154=v92[2 + 0 ];v155={v90[v154](v13(v90,v154 + (4 -3) + 0 ,v92[7 -4 ]))};v280=(1408 -(1081 + 326)) + 0 ;end end end if (((1394 + 1460)>=(1829 -(379 + (974 -(84 + 717))))) and (v153==(1 + 0 + 0))) then v156=0 -0 ;for v285=v154,v92[522 -(18 + 500) ] do local v286=0;while true do if ((v286==(0 + 0)) or ((1499 + (1266 -(345 + 765)))>=((5517 -(189 + 208)) -(5 + 654)))) then v156=v156 + 1 + 0 ;v90[v285]=v155[v156];break;end end end break;end end break;end if (((3912 -(151 + 97))<4098) and (v152==((5 -3) -1))) then v155=nil;v156=nil;v152=1 + 1 ;end if ((v152==(0 + 0)) or ((251 + 1696)>=(7465 -2477))) then local v251=0 + 0 ;while true do if ((v251==(540 -(485 + 55))) or ((14940 -10914)==((7752 -5584) + (6330 -4212)))) then v153=0 -0 ;v154=nil;v251=1 + 0 ;end if ((v251==(1 + 0)) or ((4111 -(1070 + 248))>(4593 -((855 -359) + 1040)))) then v152=1 + 0 + 0 ;break;end end end end elseif ((v93>(576 -(183 + 358))) or ((8 + 559)==(5611 -(91 + 1668)))) then local v210=1327 -(218 + 1109) ;local v211;local v212;while true do if (((10950 -7499)==(13671 -10220)) and (v210==(2 -1))) then while true do if (((0 + 0 + 0)==v211) or ((601 + 623)>(3433 -(636 + 1250)))) then v212=v92[(417 -172) -(39 + 204) ];v90[v212]=v90[v212](v13(v90,v212 + (1 -0) ,v71));break;end end break;end if (((211 + 684)==((3611 -(941 + 354)) -1421)) and (v210==(0 + 0))) then v211=1995 -((2448 -1387) + 252 + 682) ;v212=nil;v210=3 -2 ;end end else local v213=541 -(445 + 96) ;local v214;local v215;local v216;local v217;while true do if (((5627 -(1057 + 105))>(793 -((232 -171) + 181))) and (v213==(745 -(712 + (93 -61))))) then local v270=0 + 0 ;while true do if (((14 -(8 + 0 + 6))==v270) or ((3954 -(69 + 688))>(713 + 3087))) then v216=nil;v217=nil;v270=1 + (974 -(632 + 342)) ;end if (((5301 -(775 + 664))>=3427) and (v270==(1 -0))) then v213=6 -4 ;break;end end end if (((58 + 182)<(2607 + 1122)) and (v213==((0 + 0) -0))) then local v271=0 + 0 ;while true do if ((v271==(1 + 0)) or ((306 + 1609)<=(1797 -(22 + 21)))) then v213=1 + 0 ;break;end if (((253 + 833)<=(2936 + 663)) and (v271==(0 + 0))) then v214=554 -(544 + (21 -11)) ;v215=nil;v271=950 -(561 + 388) ;end end end if ((v213==(5 -3)) or ((676 + 3089)==(1498 -(770 + 70)))) then while true do if ((v214==(2 -1)) or ((621 + 357)>(2313 -(2499 -(132 + 1411))))) then v217=0 -0 ;for v313=v215,v92[1207 -(844 + 359) ] do local v314=1147 -(184 + 963) ;local v315;while true do if (((6097 -(836 + 349))==(579 + 4333)) and (v314==(47 -(32 + 15)))) then v315=0 + 0 ;while true do if (((307 + 2647)==(690 + 2264)) and (v315==(318 -(102 + 216)))) then v217=v217 + (1 -0) ;v90[v313]=v216[v217];break;end end break;end end end break;end if ((v214==(1547 -(412 + 1135))) or ((3110 -(247 + 833))<=(1714 -1083))) then local v295=624 -(191 + 433) ;local v296;while true do if (((275 + 2200)>=2213) and ((0 + 0)==v295)) then v296=0 + (1529 -(625 + 904)) ;while true do if (((176 -127)<((3968 -(42 + 10)) -(346 + 488))) and ((740 -(317 + 422))==v296)) then v214=1987 -((803 -(308 + 38)) + 1529) ;break;end if (((3167 + 653)<=(17583 -12622)) and (v296==(1978 -(1694 + (1673 -(469 + 920)))))) then local v363=0 + 0 ;while true do if ((v363==(0 + 0)) or ((6191 -(1679 + 314))<(5506 -(1568 + 313)))) then v215=v92[1 + 1 ];v216={v90[v215](v13(v90,v215 + 1 + 0 ,v71))};v363=3 -2 ;end if ((v363==(1 + 0)) or ((7984 -3139)<(3259 -(143 + 87)))) then v296=1 + 0 ;break;end end end end break;end end end end break;end end end elseif (((2715 -(163 + 388))<=(5236 -(28 + (3024 -(1185 + 43))))) and (v93<=42)) then if (((6055 -(1704 + (654 -(108 + 472))))<=((3276 -923) + 2630)) and (v93<=(686 -((1988 -(770 + 978)) + 407)))) then if (((16416 -11483)>(581 + 1315)) and (v93<=(4 + 33))) then v90[v92[5 -3 ]][v92[626 -(442 + 181) ]]=v90[v92[4]];elseif (((1067 + 789 + 193)<(14049 -9813)) and (v93>(109 -71))) then local v218=0 + 0 ;local v219;local v220;while true do if ((v218==1) or ((1538 + 1270)>=(5481 -(13 + 1112)))) then while true do if ((v219==0) or ((2169 -969)<(278 + 418))) then v220=v92[1 + 1 ];v90[v220]=v90[v220](v13(v90,v220 + (1647 -(1371 + 275)) ,v92[6 -3 ]));break;end end break;end if (((859 -(407 + 452))==v218) or (((928 + 2545) -1607)>(10544 -5838))) then v219=0 -(1234 -(411 + 823)) ;v220=nil;v218=1 + 0 ;end end elseif (((2429 + 118)>(8725 -6941)) and (v92[605 -(333 + 270) ]<v90[v92[4 + 0 ]])) then v70=v70 + (1 -0) ;else v70=v92[763 -(145 + 615) ];end elseif ((v93<=((164 + 234) -(318 + 40))) or ((2509 + 140 + 53)<(1005 + (3851 -2771)))) then local v159=0 + 0 ;local v160;local v161;local v162;while true do if ((2756<(4734 -((1975 -(1254 + 678)) + 64))) and (v159==(1 + 0))) then v162=nil;while true do if ((v160==(353 -(112 + 240))) or (1895>(511 + 3896))) then v90[v161 + (1 -0) ]=v162;v90[v161]=v162[v92[4 + 0 ]];break;end if ((v160==(561 -(359 + 202))) or ((8588 -5328)>=(4169 -((2260 -(1057 + 802)) + 257)))) then local v284=0 + 0 ;while true do if ((v284==(0 + 0 + 0)) or ((4591 -(32 + 86 + 703))<=422)) then v161=v92[1059 -((2340 -(589 + 727)) + 33) ];v162=v90[v92[6 -3 ]];v284=1;end if ((v284==(2 -1)) or ((2030 + 1)<=(2229 -(529 + 73)))) then v160=2 -(1 -0) ;break;end end end end break;end if (((9190 -6328)>=(1616 + 659)) and (0==v159)) then v160=0 -0 ;v161=nil;v159=1455 -(95 + 1359) ;end end elseif (((107 + 1243)<(3734 -2172)) and (v93>(23 + 18))) then if ((v90[v92[1 + 1 ]]==v90[v92[1629 -(496 + 1129) ]]) or ((173 + 295)>(5186 -(434 + 123)))) then v70=v70 + 1 + 0 ;else v70=v92[1384 -(370 + 1011) ];end else local v221=(2052 -1054) -(113 + 885) ;local v222;local v223;local v224;local v225;while true do if (((2882 + (2573 -(293 + 552)))<(1397 + 3583)) and (v221==((164 -(74 + 88)) -1))) then local v272=0 + 0 ;while true do if (((305 + 56)<=(14501 -11315)) and (v272==(1689 -(424 + 1264)))) then v221=2 + 0 ;break;end if (((1338 + 1951)>(891 + 138)) and ((1727 -(40 + 649 + 1038))==v272)) then v224=nil;v225=nil;v272=3 -2 ;end end end if ((v221==((1052 -(208 + 842)) + (0 -0))) or ((1310 -(183 + 621))>(3466 -(314 + 273)))) then while true do if ((v222==(487 -(175 + 312))) or ((9935 -6073)<=(8059 -5064))) then local v299=0 -0 ;local v300;while true do if (((6397 -(684 + 722))>=(2493 + (2947 -1900))) and (v299==(1528 -(225 + 491 + 812)))) then v300=0 -0 ;while true do if (((278 + 1312)>(2244 -862)) and (v300==(2 -1))) then v222=1 + 0 ;break;end if (((4481 -2601)==(3413 -1533)) and ((29 -(27 + 2))==v300)) then v223=v85[v92[5 -2 ]];v224=nil;v300=1 -0 ;end end break;end end end if ((v222==(1 + 0)) or ((2442 -(326 + 82))<(100 + 1023))) then local v301=0 -0 ;while true do if ((v301==(0 -0)) or ((2461 + 360)<(1993 -(534 + (1579 -876))))) then v225={};v224=v10({},{__index=function(v349,v350)local v351=0 -0 ;local v352;local v353;while true do if (((1023 + 473 + 619)>=(3061 -(40 + 1652))) and (v351==(1947 -(1179 + 768)))) then local v373=0 -0 ;while true do if ((v373==(83 -(48 + 34))) or ((15138 -10540)==(27 + 268 + 580))) then v351=1 -0 ;break;end if ((v373==(37 -(24 + 13))) or ((13216 -8546)<=(2266 -(517 + 1314)))) then v352=0 + 0 ;v353=nil;v373=4 -3 ;end end end if ((((5612 -(379 + 425)) -(154 + 1160))<(15928 -11589)) and (v351==(1 + 0))) then while true do if (((800 -(253 + 455))<(3441 -((321 -127) + 656))) and (v352==(0 -0))) then local v396=0 + 0 ;while true do if ((v396==(0 + 0)) or ((2470 + 1849)<=(4628 -(646 + (2539 -1720))))) then v353=v225[v350];return v353[1 + 0 + 0 ][v353[3 -1 ]];end end end end break;end end end,__newindex=function(v354,v355,v356)local v357=1701 -(636 + 1065) ;local v358;local v359;while true do if ((v357==(1 + 0)) or ((534 + 80)<(939 -(732 + 168)))) then while true do if (((0 + 0)==v358) or (((6151 -(53 + 479)) -(188 + 52 + 410))<(15596 -12232))) then v359=v225[v355];v359[2 -1 ][v359[1 + 1 ]]=v356;break;end end break;end if (((1885 -(1521 + 115))<(4251 + 477)) and (v357==(0 + 0))) then local v374=0 + 0 ;while true do if ((v374==(1 + 0)) or ((8296 -5162)<(3652 -2113))) then v357=3 -2 ;break;end if (((963 + 1031)<(4722 -(440 + 961))) and (v374==(1494 -(1190 + 209 + 95)))) then v358=0 -0 ;v359=nil;v374=1 + 0 ;end end end end end});v301=4 -3 ;end if (((1 + 0)==v301) or ((4791 -1724)==(1405 -(410 + 389)))) then v222=174 -(66 + 106) ;break;end end end if (((3241 -2528)<=(3091 -(274 + 761))) and (v222==(5 -3))) then for v318=1733 -(158 + 1574) ,v92[14 -10 ] do local v319=(180 + 212) -(157 + 235) ;local v320;local v321;while true do if ((v319==(1 + 0)) or (2547>=(5034 -((2578 -1167) + 94)))) then while true do if (((3 -2)==v320) or ((838 + 1320)>=(3485 -((1757 -(573 + 815)) + 314)))) then if ((v321[1 -0 ]==((2688 -(265 + 954)) -(1353 + 89))) or ((3542 -(182 + 426))<=(163 + 14 + 28))) then v225[v318-(1 + 0) ]={v90,v321[(1233 -(196 + 1031)) -3 ]};else v225[v318-(2 -1) ]={v46,v321[255 -(43 + 209) ]};end v89[ #v89 + (2 -1) ]=v225;break;end if ((v320==(1412 -(996 + 416))) or (242>(2731 + 700))) then local v376=0 -0 ;local v377;while true do if (((5494 -(263 + 380))>=(5099 -2619)) and (v376==(0 -0))) then v377=0 + 0 ;while true do if ((v377==(59 -(23 + 35))) or ((1535 -471)>(1136 + 506))) then v320=1 -0 ;break;end if ((v377==(0 -0)) or ((9606 -5584)==(7151 -4475))) then v70=v70 + 1 + 0 ;v321=v84[v70];v377=313 -(135 + 177) ;end end break;end end end end break;end if (((1403 -(316 + 1087))==v319) or ((33 + 1782)>((4554 -(227 + 485)) -1311))) then v320=0 + 0 ;v321=nil;v319=1 + 0 + 0 ;end end end v90[v92[1551 -(359 + 1190) ]]=v30(v223,v224,v47);break;end end break;end if ((v221==(1007 -(793 + 214))) or ((3164 + 702)<=(899 + 407))) then v222=1494 -(583 + 911) ;v223=nil;v221=1 -(0 + 0) ;end end end elseif ((v93<=(629 -(175 + 409))) or (3012>(805 + 2860))) then if (((2625 -1939)<(2005 + 1931)) and (v93<=43)) then v90[v92[2 -0 ]]=v90[v92[279 -(256 + 20) ]]/v90[v92[7 -3 ]] ;elseif ((3215>=(3192 -((134 -87) + 211))) and (v93>44)) then v90[v92[2 + 0 ]]=v92[10 -7 ];else local v228=(1210 -516) -(539 + 155) ;local v229;local v230;local v231;local v232;local v233;while true do if (((2238 -(224 + 6))<(3415 + 1563)) and (v228==(2 + 0))) then v233=nil;while true do if (((1049 -362)<=4509) and (v229==0)) then local v303=274 -(7 + 267) ;local v304;while true do if ((((553 + 519) -(301 + 771))==v303) or ((4835 -(2438 -(59 + 622)))>=(3298 -(18 + 7)))) then v304=0 -0 ;while true do if (((6432 -4229)<=(7951 -5169)) and (v304==(930 -(617 + 312)))) then v229=1 + (1263 -(394 + 869)) ;break;end if (((13568 -8652)>=(11938 -(15562 -7682))) and (v304==(0 + 0))) then local v365=0 + 0 ;while true do if ((v365==(659 -(571 + 87))) or ((1991 -(85 + 623))>(2610 -929))) then v304=1 + 0 ;break;end if ((v365==(299 -(121 + 178))) or (((15040 -9945) -(391 + 384))<(1074 -(332 + 466)))) then v230=v92[1 + 1 ];v231,v232=v87(v90[v230](v90[v230 + 1 + 0 + 0 ]));v365=1241 -((136 -(51 + 60)) + 1215) ;end end end end break;end end end if ((v229==(1 + 0)) or ((412 + 178)>(829 + 2654))) then local v305=(866 -578) -(247 + 41) ;local v306;while true do if (((2885 -(1302 + 106))==(2374 -(155 + 742))) and (v305==(0 + 0))) then v306=0;while true do if (((885 + (1308 -(582 + 442)))<=(2676 + (476 -116))) and (v306==((0 -0) + 0))) then local v366=0 + 0 ;while true do if (((289 + (3060 -(753 + 19)))>29) and (v366==(2 -1))) then v306=1352 -(865 + 486) ;break;end if ((v366==(1495 -(1109 + 386))) or ((8772 -4249)<=(791 -582))) then v71=(v232 + v230) -(1 + 0) ;v233=(4241 -2464) -(536 + (2003 -(229 + 533))) ;v366=1;end end end if (((9548 -6402)==(4081 -(919 + 16))) and ((2 -1)==v306)) then v229=4 -2 ;break;end end break;end end end if ((v229==(457 -(59 + 396))) or ((2258 -1274)==(252 + (2524 -1285)))) then for v322=v230,v71 do local v323=0 -0 ;local v324;local v325;while true do if (((3079 -1645)==(2035 -601)) and (v323==(845 -(248 + 24 + 156 + 417)))) then v324=0 + 0 ;v325=nil;v323=1 -0 ;end if (((5162 -2450)==((16151 -12009) -(1078 + 352))) and (v323==(1 + 0))) then while true do if (((71 + 116)<(3287 -(743 + (2296 -(66 + 1585))))) and (v324==(0 -0))) then v325=1983 -(74 + 1418 + 491) ;while true do if ((v325==(0 + 0)) or ((1622 + 79)==(6487 -2371))) then v233=v233 + (487 -(46 + 440)) ;v90[v322]=v231[v233];break;end end break;end end break;end end end break;end end break;end if ((v228==(997 -(720 + (892 -615)))) or ((3193 -1282)>=(2597 -(88 + 490)))) then local v273=0 -0 ;while true do if (((0 + 0)==v273) or ((4297 -(333 + 73))>=(6135 -(928 + 389)))) then v229=0 + 0 ;v230=nil;v273=4 -3 ;end if ((v273==(1 + 0)) or ((6175 -4361)==(5881 -(1287 + 692)))) then v228=3 -2 ;break;end end end if ((((4209 -(1447 + 272)) -1450)<=(11694 -7506)) and (v228==(1927 -(432 + 1494)))) then local v274=(0 + 0) -0 ;while true do if (((275 + 330)<=(14758 -11561)) and (v274==(1 -0))) then v228=711 -(427 + 282) ;break;end if (((0 -0)==v274) or ((4508 -(15 + 26))==(4862 -(2446 + 180)))) then v231=nil;v232=nil;v274=1 + 0 ;end end end end end elseif (((3536 -((559 -221) + 127))>(853 + 1575)) and (v93<=(1828 -(484 + 1297)))) then if ((v93==(36 + 10)) or (4822<(2160 -(443 + 51)))) then local v234=0 -0 ;local v235;while true do if (((7 + (1261 -(780 + 464)))<(495 + 629)) and (v234==(739 -(64 + 675)))) then v235=v92[(2 -0) -0 ];do return v13(v90,v235,v235 + v92[454 -(207 + 244) ] );end break;end end else v90[v92[2]]=v47[v92[1 + 2 ]];end elseif (((9456 -(8946 -4173))>=(4995 -(121 + 111 + 185))) and (v93>(1839 -(944 + 847)))) then local v238=1819 -(707 + 1112) ;local v239;while true do if (((1331 -(311 + 54 + 91))<((5129 -(446 + 339)) -(1739 + 1019))) and (v238==((0 + 0) -0))) then v239=v92[1 + 1 ];v90[v239](v90[v239 + 1 + 0 ]);break;end end elseif ((((1688 -(751 + 142)) + 611)<(407 + 1644)) and v90[v92[1 + 1 ]]) then v70=v70 + ((3 -1) -1) ;else v70=v92[1310 -(274 + 1033) ];end v70=v70 + (4 -3) ;break;end end break;end end break;end end end end v69=3;end if (v69==1) then v72={...};v73=v12("#",...) -1 ;v69=2;end if (v69==3) then A,B=v28(v11(v74));if  not A[1] then local v98=v45[4][v70] or "?" ;error("Script error at ["   .. v98   .. "]:"   .. A[2] );else return v13(A,2,B);end break;end if (v69==0) then v70=1;v71= -1;v69=1;end end end;end return v30(v29(),{},v17)(...);end if (v18==3) then function v25()local v51=0 -0 ;local v52;local v53;local v54;local v55;local v56;local v57;while true do if (v51==(2 -(1 -0))) then v54=1 + 0 ;v55=(v21(v53,2 -1 ,(465 -(80 + 327)) -38 ) * ((2 + 0)^(2 + 30))) + v52 ;v51=1336 -(455 + (2311 -1432)) ;end if ((832 -((1637 -(67 + 1365)) + (2482 -1858)))==v51) then if (v56==(1862 -(481 + 1381))) then if (v55==(0 -0)) then return v57 * (0 + 0) ;else v56=1;v54=0;end elseif (v56==(1258 + 789)) then return ((v55==(1173 -(827 + 346))) and (v57 * ((1045 -((1282 -1001) + 763))/0))) or (v57 * NaN) ;end return v8(v57,v56-(954 + 32 + 37) ) * (v54 + (v55/((1 + 1 + 0)^(14 + 38)))) ;end if (v51==(223 -(29 + 19 + 175))) then v52=v24();v53=v24();v51=1;end if (v51==(779 -(209 + 568))) then v56=v21(v53,46 -(1770 -(575 + 1170)) ,20 + 11 );v57=((v21(v53,434 -(67 + (882 -(521 + 26))) )==1) and  -((998 -(605 + 392)) + 0)) or 1 ;v51=5 -2 ;end end end v26=nil;function v26(v58)local v59;if  not v58 then local v77=241 -(71 + 170) ;while true do if (v77==(204 -(60 + 64 + 80))) then v58=v24();if (v58==((34 -(4 + 30)) -0)) then return "";end break;end end end v59=v3(v16,v19,(v19 + v58) -(1 -0) );v19=v19 + v58 ;local v60={};for v75=201 -(9 + 191) , #v59 do v60[v75]=v2(v1(v3(v59,v75,v75)));end return v6(v60);end v27=v24;v18=4;end if (v18==1) then function v21(v61,v62,v63)if v63 then local v78=(1894 -(523 + 969)) -(127 + 275) ;local v79;while true do if (v78==(1449 -(383 + 314 + 752))) then v79=(v61/((8 -6)^(v62-1)))%((3 -1)^(((v63-(788 -(89 + 698))) -(v62-1)) + (2 -1) + 0)) ;return v79-(v79%(2 -1)) ;end end else local v80=(1 + 1)^(v62-(1 -0)) ;return (((v61%(v80 + v80))>=v80) and (2 -1)) or ((0 + 0) -0) ;end end v22=nil;function v22()local v64=1485 -(741 + 744) ;local v65;while true do if ((2 -1)==v64) then return v65;end if (v64==(0 + 0)) then v65=v1(v16,v19,v19);v19=v19 + (2 -1) ;v64=1 -0 ;end end end v23=nil;v18=2;end if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v66)if (v1(v66,2)==79) then local v81=0;while true do if (v81==0) then v20=v0(v3(v66,1,1));return "";end end else local v82=0;local v83;while true do if (v82==0) then v83=v2(v0(v66,16));if v20 then local v99=0;local v100;while true do if (v99==1) then return v100;end if (v99==0) then v100=v5(v83,v20);v20=nil;v99=1;end end else return v83;end break;end end end end);v21=nil;v18=1;end end end vv9(),...);end